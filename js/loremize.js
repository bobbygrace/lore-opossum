// Generated by CoffeeScript 1.8.0
(function() {
  var LoremModel, LoremView,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ZeroClipboard.config({
    swfPath: "bower_components/zeroclipboard/dist/ZeroClipboard.swf"
  });

  LoremModel = (function(_super) {
    __extends(LoremModel, _super);

    function LoremModel() {
      return LoremModel.__super__.constructor.apply(this, arguments);
    }

    LoremModel.prototype.defaults = function() {
      var ls, _ref, _ref1, _ref2;
      ls = JSON.parse(localStorage.getItem('settings'));
      return {
        type: (_ref = ls != null ? ls["type"] : void 0) != null ? _ref : "Trello",
        paragraphs: (_ref1 = ls != null ? ls["paragraphs"] : void 0) != null ? _ref1 : 3,
        format: (_ref2 = ls != null ? ls["format"] : void 0) != null ? _ref2 : "Text"
      };
    };

    LoremModel.prototype.set = function() {
      LoremModel.__super__.set.apply(this, arguments);
      return localStorage.setItem("settings", JSON.stringify(this.attributes));
    };

    LoremModel.prototype.setType = function(value) {
      return this.set({
        type: value
      });
    };

    LoremModel.prototype.setParagraphs = function(value) {
      return this.set({
        paragraphs: value
      });
    };

    LoremModel.prototype.setFormat = function(value) {
      return this.set({
        format: value
      });
    };

    return LoremModel;

  })(Backbone.Model);

  LoremView = (function(_super) {
    __extends(LoremView, _super);

    function LoremView() {
      return LoremView.__super__.constructor.apply(this, arguments);
    }

    LoremView.prototype.events = {
      "click .js-select-type a": "selectType",
      "click .js-select-paragraphs a": "selectNumParagraphs",
      "click .js-select-format a": "selectFormat",
      "click .js-copy-to-clipbard": "copyToClipboard"
    };

    LoremView.prototype.initialize = function() {
      this.listenTo(this.model, "change", this.renderIpsum);
      this.listenTo(this.model, "change:type", this.renderTypes);
      this.listenTo(this.model, "change:paragraphs", this.renderNumParagraphs);
      return this.listenTo(this.model, "change:format", this.renderFormats);
    };

    LoremView.prototype.render = function() {
      this.setElement($(".js-app"));
      this.renderTypes();
      this.renderNumParagraphs();
      this.renderFormats();
      this.renderIpsum();
      this.clipboardClient = new ZeroClipboard(this.$(".js-copy-to-clipboard"));
      this.clipboardClient.on("error", (function(_this) {
        return function(e) {
          return _this.$(".js-copy-to-clipboard").addClass("hidden");
        };
      })(this));
      this.clipboardClient.on("ready", (function(_this) {
        return function(e) {
          return _this.$(".js-copy-to-clipboard").removeClass("hidden");
        };
      })(this));
      this.clipboardClient.on("aftercopy", (function(_this) {
        return function(e) {
          var originalText;
          originalText = _this.$(".js-copy-to-clipboard")[0].innerText;
          _this.$(".js-copy-to-clipboard")[0].innerText = "Copied!";
          return setTimeout(function() {
            return _this.$(".js-copy-to-clipboard")[0].innerText = originalText;
          }, 2000);
        };
      })(this));
      _.defer((function(_this) {
        return function() {
          return _this.$el.removeClass("hidden");
        };
      })(this));
      return this;
    };

    LoremView.prototype.renderTypes = function() {
      var $types, currentType, data, html, template, type;
      $types = this.$(".js-list-types");
      template = templates.optionType;
      currentType = this.model.get("type");
      html = '';
      for (type in types) {
        data = {
          type: type
        };
        if (type === currentType) {
          data.isCurrent = true;
        }
        html += Mustache.render(template, data);
      }
      $types.html(html);
      return this;
    };

    LoremView.prototype.renderNumParagraphs = function() {
      var $paragraphs, currentNumParagraphs, data, html, p, paragraphsRange, template, _i, _len;
      paragraphsRange = [1, 2, 3, 4, 5, 6, 7, 8];
      $paragraphs = this.$(".js-list-paragraphs");
      template = templates.optionParagraphs;
      currentNumParagraphs = Number(this.model.get("paragraphs"));
      html = '';
      for (_i = 0, _len = paragraphsRange.length; _i < _len; _i++) {
        p = paragraphsRange[_i];
        data = {
          num: p
        };
        if (p === currentNumParagraphs) {
          data.isCurrent = true;
        }
        html += Mustache.render(template, data);
      }
      $paragraphs.html(html);
      return this;
    };

    LoremView.prototype.renderFormats = function() {
      var $formats, currentFormat, data, format, formats, html, template, _i, _len;
      formats = ["Text", "HTML", "JSON"];
      $formats = this.$(".js-list-formats");
      template = templates.optionFormat;
      currentFormat = this.model.get("format");
      html = '';
      for (_i = 0, _len = formats.length; _i < _len; _i++) {
        format = formats[_i];
        data = {
          format: format
        };
        if (format === currentFormat) {
          data.isCurrent = true;
        }
        html += Mustache.render(template, data);
      }
      $formats.html(html);
      return this;
    };

    LoremView.prototype.renderIpsum = function() {
      var $ipsum, format, json, numParagraphs, p, paragraphs, string;
      $ipsum = $(".js-render-ipsum");
      format = this.model.get("format");
      numParagraphs = this.model.get("paragraphs");
      switch (format) {
        case "HTML":
          paragraphs = (function() {
            var _i, _results;
            _results = [];
            for (p = _i = 1; 1 <= numParagraphs ? _i <= numParagraphs : _i >= numParagraphs; p = 1 <= numParagraphs ? ++_i : --_i) {
              _results.push("<p>" + (this.generateParagraph()) + "</p>");
            }
            return _results;
          }).call(this);
          $ipsum.html(Mustache.render(templates.ipsumText, {
            paragraphs: paragraphs
          }));
          break;
        case "JSON":
          paragraphs = (function() {
            var _i, _results;
            _results = [];
            for (p = _i = 1; 1 <= numParagraphs ? _i <= numParagraphs : _i >= numParagraphs; p = 1 <= numParagraphs ? ++_i : --_i) {
              _results.push("\"" + (this.generateParagraph()) + "\"");
            }
            return _results;
          }).call(this);
          string = paragraphs.join(",");
          json = "[" + string + "]";
          $ipsum.html(Mustache.render(templates.ipsumJSON, {
            json: json
          }));
          break;
        default:
          paragraphs = (function() {
            var _i, _results;
            _results = [];
            for (p = _i = 1; 1 <= numParagraphs ? _i <= numParagraphs : _i >= numParagraphs; p = 1 <= numParagraphs ? ++_i : --_i) {
              _results.push(this.generateParagraph());
            }
            return _results;
          }).call(this);
          $ipsum.html(Mustache.render(templates.ipsumText, {
            paragraphs: paragraphs
          }));
      }
      return this;
    };

    LoremView.prototype.generateSentence = function() {
      var length, lengthRange, rawSentence, sentence, type, wordArray;
      lengthRange = [6, 7, 8, 9, 10];
      length = _.sample(lengthRange);
      type = this.model.get("type");
      wordArray = _.sample(types[type], length);
      rawSentence = wordArray.join(" ");
      return sentence = rawSentence.charAt(0).toUpperCase() + rawSentence.slice(1) + ".";
    };

    LoremView.prototype.generateParagraph = function() {
      var length, lengthRange, paragraph, s;
      lengthRange = [4, 5, 6, 7, 8];
      length = _.sample(lengthRange);
      return paragraph = ((function() {
        var _i, _results;
        _results = [];
        for (s = _i = 0; 0 <= length ? _i <= length : _i >= length; s = 0 <= length ? ++_i : --_i) {
          _results.push(this.generateSentence());
        }
        return _results;
      }).call(this)).join(" ");
    };

    LoremView.prototype.selectType = function(e) {
      var value;
      e.preventDefault();
      value = $(e.target).attr("data-type");
      this.model.setType(value);
      return false;
    };

    LoremView.prototype.selectNumParagraphs = function(e) {
      var value;
      e.preventDefault();
      value = $(e.target).attr("data-paragraphs");
      this.model.setParagraphs(value);
      return false;
    };

    LoremView.prototype.selectFormat = function(e) {
      var value;
      e.preventDefault();
      value = $(e.target).attr("data-format");
      this.model.setFormat(value);
      return false;
    };

    return LoremView;

  })(Backbone.View);

  new LoremView({
    model: new LoremModel
  }).render();

}).call(this);
